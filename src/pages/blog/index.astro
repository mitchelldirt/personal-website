---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}

			.post-type-btn {
                background: none;
                border: none;
                cursor: pointer;
                font-size: 1.5em;
                padding: .7em;
                height: 100%;
            }

            #codingButton {
                border-right: 1px solid #000;
                position: relative;
            }

            #personalButton {
                border-left: 1px solid #000;
                position: relative;
            }

            .post-type-btn-wrapper {
                display: flex;
                justify-content: center;
                margin-bottom: 1em;
            }

            .post-type-btn-container {
                display: flex;
                justify-content: center;
                margin-bottom: 1em;
                border: 2px solid #000;
                border-radius: 5px;
                width: fit-content;
                position: relative;
                background-color: #fff;
            }

            #codingButton::after,
            #personalButton::after {
                content: '';
                display: block;
                position: absolute;
                width: 100%;
                height: 100%;
                border-radius: 5px;
                z-index: -1;
                top: 50%;
                left: 50%;
                padding: .5em;
                transform: translate(-50%, -50%);
                filter: blur(10px);
                opacity: 0;
                background: conic-gradient(#ff0000, #ff00ff, #0000ff, #00ffff, #00ff00, #ffff00, #ff0000);
                transition: opacity 0.3s ease;
            }

            #codingButton:hover::after,
            #personalButton:hover::after,
            #codingButton.selected::after,
            #personalButton.selected::after {
                opacity: 0.5;
            }
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
				.post-type-btn {
				font-size: 1em;
                padding: .7em;
                height: 100%;
				}

			}
		</style>
	</head>
	<body>
		<Header />
		<main>
		    <div>
			<section class="post-type-btn-wrapper">
			    <div class="post-type-btn-container">
		          <button class="post-type-btn" id="codingButton">Coding üë®üèª‚Äçüíª</button>
				  <button class="post-type-btn" id="personalButton">Personal üö≤</button>
				</div>
			</section>
			<section>
				<ul>
					{
						posts.map((post) => (
							<li class="blog-post" data-type=`${post.data.type}`>
								<a href={`/blog/${post.slug}/`}>
									<img width={720} height={360} src={post.data.heroImage} alt="" />
									<h4 class="title">{post.data.title}</h4>
									<p class="date">
										<FormattedDate date={post.data.pubDate} />
									</p>
								</a>
							</li>
						))
					}
				</ul>
			</section>
		</main>
		<Footer />
	 <script>
      function filterPosts(type: string) {
        const posts = document.querySelectorAll('.blog-post');
        posts.forEach(post => {
          if (post.getAttribute('data-type') === type) {
            // confirm that the post is an li element
            if (post instanceof HTMLLIElement) {
              post.style.display = 'block';
            }
          } else {
            if (post instanceof HTMLLIElement) {
              post.style.display = 'none';
            }
          }
        });
        // set the query string to the type
        window.history.pushState({}, '', `?type=${type}`);
      }

      function toggleSelectedClass(btn: HTMLButtonElement) {
        const buttons = document.querySelectorAll('.post-type-btn');
        buttons.forEach(button => {
          if (button instanceof HTMLButtonElement) {
                if (button === btn) {
                  button.classList.add('selected');
                } else {
                  button.classList.remove('selected');
                }
          }})
      }

     const codingButton = document.getElementById('codingButton');
     const personalButton = document.getElementById('personalButton');

      [codingButton, personalButton].forEach(button => {
         button?.addEventListener('click', (e) => {
           const type = button === codingButton ? 'coding' : 'personal';

           filterPosts(type);
           if (e.target instanceof HTMLButtonElement) {
             toggleSelectedClass(e.target);
           }
         });
       });

      const queryString = window.location.search;

      if (queryString) {
        const urlParams = new URLSearchParams(queryString);
        const type = urlParams.get('type');

        if (type) {
          filterPosts(type);
          if (type === 'coding' && codingButton instanceof HTMLButtonElement) {
            toggleSelectedClass(codingButton);
          } else if (type === 'personal' && personalButton instanceof HTMLButtonElement) {
            toggleSelectedClass(personalButton);
          }
        }
      }

    </script>
	</body>
</html>
